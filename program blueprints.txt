program blueprints
==================
mapper.py
---------
#!/usr/bin/python3
import sys
for line in sys.stdin:
        line = line.strip()
        fields = line.split(',')
        if len(fields) > 1:
                try:
                        temp = float(fields[2])
                        print(f"temperature\t{temp}")
                except ValueError:
                        continue

reducer.py
----------                                                                                            #!/usr/bin/python3
import sys

min_temp = float('inf')
max_temp = float('-inf')

for line in sys.stdin:
        line = line.strip()
        key,temp = line.split('\t')
        temp = float(temp)
        print(temp)
        if temp < min_temp:
                min_temp = temp
        if temp > max_temp:
                max_temp = temp

print(f'Minimum Temperature: {min_temp}')
print(f'Maximum Temperature: {max_temp}')


#!/usr/bin/python3
import sys

current_word = None
current_count = 0
word = None

for line in sys.stdin:
        line = line.strip()
        word, count = line.split("\t", 1)
        count = int(count)
        if current_word == word:
                current_count += count
        else:
                if current_word:
                        print(f"{current_word}\t{current_count}")
                current_word = word
                current_count = count

if current_word == word:
        print(f"{current_word}\t{current_count}")


mapper1.py
----------
#!/usr/bin/python3
import sys

for line in sys.stdin:
        line = line.strip()
        words = line.split()
        for word in words:
                print(f"{word}\t1")


mapper2.py
-----------
#!/usr/bin/python3

import sys
from itertools import combinations

for line in sys.stdin:
        items = line.strip().split()
        for pair in combinations(sorted(items), 2):
                print(f"{pair[0]} {pair[1]}\t1")

reducer2.py
------------
#!/usr/bin/python3

import sys

current_pair = None
current_count = 0
pair = None

for line in sys.stdin:
        pair, count = line.strip().split('\t')
        count = int(count)
        if current_pair == pair:
                current_count += count
        else:
                if current_pair:
                        print(f"{current_pair}\t{current_count}")
                current_pair = pair
                current_count = count

if current_pair:
    print(f"{current_pair}\t{current_count}")



Linux code
----------


chmod +x /home/adithan/hadoop/mapper.py
chmod +x /home/adithan/hadoop/reducer.py


hadoop jar /home/adithan/hadoop/hadoop-3.3.6/share/hadoop/tools/lib/hadoop-streaming-3.3.6.jar \
    -input /user/adithan/data2.txt \                        # Input file in HDFS
    -output /user/adithan/output_directory_apriori \       # Output directory in HDFS
    -mapper "python3 /home/adithan/hadoop/mapper2.py" \   # Mapper script
    -reducer "python3 /home/adithan/hadoop/reducer2.py" \ # Reducer script
    -file /home/adithan/hadoop/mapper2.py \               # File to be included for mapper
    -file /home/adithan/hadoop/reducer2.py                 # File to be included for reducer


hadoop fs -cat /user/adithan/output_directory_apriori/part-00000

hadoop fs -put -f data2.txt /user/adithan/

cat data2.txt | ./mapper2.py | sort | ./reducer2.py






